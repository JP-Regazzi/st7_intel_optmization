# “INTEL CONFIDENTIAL
# Copyright (2012)2 (03-2014)3 Intel Corporation All Rights Reserved. 
# The source code contained or described herein and all documents related 
# to the source code ("Material") are owned by Intel Corporation or its suppliers 
# or licensors. Title to the Material remains with Intel Corporation or its 
# suppliers and licensors. The Material contains trade secrets and proprietary 
# and confidential information of Intel or its suppliers and licensors. The 
# Material is protected by worldwide copyright and trade secret laws and treaty 
# provisions. No part of the Material may be used, copied, reproduced, modified, 
# published, uploaded, posted, transmitted, distributed, or disclosed in any way 
# without Intel’s prior express written permission.
#
# No license under any patent, copyright, trade secret or other intellectual property 
# right is granted to or conferred upon you by disclosure or delivery of the 
# Materials, either expressly, by implication, inducement, estoppel or otherwise. 
# Any license under such intellectual property rights must be express 
# and approved by Intel in writing.

# v1.0
# idea is to start with a first version of the makefile config
# for Intel compiler only
# we can include other architecture later. Phil - July 2013
#
# make.config for ISO-3DFD
#
######################################################################

###### Definition of the default folders
CONFIG_SRC_DIR=src
CONFIG_INCLUDE_DIR=include
CONFIG_BIN_DIR=bin
CONFIG_ROOT_DIR?=$(shell pwd)

###### VARIOUS DEFINITIONS
CONFIG_BASE_NAME=iso3dfd

###### Find the last version
CONFIG_LAST_VERSION?=$(shell ls -r $(CONFIG_SRC_DIR) | head -n1 )

##### VERSION OPTION
version?=$(CONFIG_LAST_VERSION)
CONFIG_VERSION?=$(version)

CONFIG_S_DIR?=$(CONFIG_ROOT_DIR)/$(CONFIG_SRC_DIR)/$(CONFIG_VERSION)


##### MODEL OPTION
model?=cpu
CONFIG_MODEL=$(model)

simd?=avx

Olevel?=-O3
O_LEVEL=$(Olevel)

###### SIMD OPTION
ifeq ($(simd),sse)
CONFIG_SIMD=-xSSE4.1 
CONFIG_SIMD_DEF=-DSSE
CONFIG_TYPE_SIMD_DEF=-DSIMD_TYPE=__m128
CONFIG_SIMD_STEP_DEF=-DSIMD_STEP=4
else
ifeq ($(simd),avx)
CONFIG_SIMD=-xAVX 
CONFIG_SIMD_DEF=-DAVX
CONFIG_TYPE_SIMD_DEF=-DSIMD_TYPE=__m256
CONFIG_SIMD_STEP_DEF=-DSIMD_STEP=8
else
ifeq ($(simd),avx2)
CONFIG_SIMD=-xCORE-AVX2 
CONFIG_SIMD_DEF=-DAVX2
CONFIG_TYPE_SIMD_DEF=-DSIMD_TYPE=__m256
CONFIG_SIMD_STEP_DEF=-DSIMD_STEP=8
else
ifeq ($(simd),avx512)
CONFIG_SIMD=-xCORE-AVX512 -qopt-zmm-usage=high
CONFIG_SIMD_DEF=-DAVX512
CONFIG_TYPE_SIMD_DEF=-DSIMD_TYPE=__m256
CONFIG_SIMD_STEP_DEF=-DSIMD_STEP=8
else
CONFIG_SIMD=-xSSE4.1 
CONFIG_SIMD_DEF=-DSSE
CONFIG_TYPE_SIMD_DEF=-DSIMD_TYPE=__m128
CONFIG_SIMD_STEP_DEF=-DSIMD_STEP=4
endif
endif
endif
endif





### Executable name based on choosen version and SIMD options
CONFIG_EXE_NAME?=$(CONFIG_BASE_NAME)_$(CONFIG_VERSION)_$(model)_$(simd).exe
CONFIG_EXEC?=$(CONFIG_ROOT_DIR)/../../$(CONFIG_BIN_DIR)/$(CONFIG_EXE_NAME)

#   C Compiler
CONFIG_CC=icpc 
CONFIG_RM=rm -f


######### DEFAULT OPTIMIZATIONS
CONFIG_DEFAULT_OPTI= $(OPTIMIZATION) $(PREFETCH) $(UNROLL) -std=c++11 -fp-model precise -qopt-report -qopt-report-phase=vec # -unroll8

ifeq ($(model), mic) ###Optimizations for MIC
CONFIG_OPTI=$(CONFIG_DEFAULT_OPTI) -ansi-alias -fno-alias -fp-model=precise

else  ###For XEON
CONFIG_OPTI=$(CONFIG_DEFAULT_OPTI) 
endif

CONFIG_MISC=-zero 

CONFIG_COPT=-std=c++11 $(O_LEVEL) #-Ofast #-g 
CONFIG_LDFLAGS=-qopenmp -lrt 

# Definitions
BLOCK_LOOP?=-DBLOCK_Z_Y_X
CONFIG_DEFS=-DDT=0.002f -DDXYZ=50.0f -DHALF_LENGTH=8 $(BLOCK_LOOP) $(CONFIG_DEF_CREW) $(CONFIG_SIMD_DEF) $(CONFIG_MODEL_DEF) $(CONFIG_TYPE_SIMD_DEF) $(CONFIG_SIMD_STEP_DEF) -DUSE_FT
#CONFIG_DEFS=-DDT=0.002f -DDXYZ=50.0f -DHALF_LENGTH=8 -DVERIFY_RESULTS $(BLOCK_LOOP) $(CONFIG_DEF_CREW) $(CONFIG_SIMD_DEF) $(CONFIG_MODEL_DEF) $(CONFIG_TYPE_SIMD_DEF) $(CONFIG_SIMD_STEP_DEF)


# includes
CONFIG_INCLUDES=$(CONFIG_CREW_INC)

# Options compilation
CONFIG_CFLAGS= $(CONFIG_INCLUDES) $(CONFIG_COPT) ${CONFIG_OPTI} ${CONFIG_ODEB} $(CONFIG_SIMD) $(CONFIG_MISC) -qopenmp $(CONFIG_CREW_FLAGS) -qtbb -fp-model precise -no-fma

# Librairies Fortran
CONFIG_LIBS=


# rules
%.o: %.cc
	$(CONFIG_CC) $(CONFIG_DEFS) $(CONFIG_CFLAGS) -o $@ -c $< 
# rules
%.o: %.cpp
	$(CONFIG_CC) $(CONFIG_DEFS) $(CONFIG_CFLAGS) -o $@ -c $< 

